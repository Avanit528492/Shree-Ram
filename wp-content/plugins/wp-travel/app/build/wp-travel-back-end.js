/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/assets/js/wp-travel-back-end.js":
/*!*********************************************!*\
  !*** ./app/assets/js/wp-travel-back-end.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function ($) {\n  if ('undefined' != typeof GMaps && $('#gmap').length > 0) {\n    var map = new GMaps({\n      div: '#gmap',\n      lat: wp_travel_drag_drop_uploader.lat,\n      lng: wp_travel_drag_drop_uploader.lng\n    }),\n        input = document.getElementById('search-input'),\n        autocomplete = new google.maps.places.Autocomplete(input);\n    map.setCenter(wp_travel_drag_drop_uploader.lat, wp_travel_drag_drop_uploader.lng);\n    map.setZoom(15);\n    map.addMarker({\n      lat: wp_travel_drag_drop_uploader.lat,\n      lng: wp_travel_drag_drop_uploader.lng,\n      title: wp_travel_drag_drop_uploader.loc,\n      draggable: true,\n      dragend: function dragend(e) {\n        var lat = e.latLng.lat();\n        var lng = e.latLng.lng();\n        map.setCenter(lat, lng);\n        var latlng = new google.maps.LatLng(lat, lng);\n        var geocoder = geocoder = new google.maps.Geocoder();\n        geocoder.geocode({\n          'latLng': latlng\n        }, function (results, status) {\n          if (status == google.maps.GeocoderStatus.OK) {\n            if (results[1]) {\n              $('#wp-travel-lat').val(lat);\n              $('#wp-travel-lng').val(lng);\n              $('#wp-travel-location').val(results[1].formatted_address);\n              $('#search-input').val(results[1].formatted_address);\n            }\n          }\n        });\n      }\n    });\n    autocomplete.bindTo('bounds', map);\n    autocomplete.addListener('place_changed', function () {\n      var place = autocomplete.getPlace();\n\n      if (!place.geometry) {\n        window.alert(\"Autocomplete's returned place contains no geometry\");\n        return;\n      }\n\n      map.removeMarkers(); // If the place has a geometry, then present it on a map.\n\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(15);\n      }\n\n      var lat = place.geometry.location.lat();\n      var lng = place.geometry.location.lng();\n      var latlng = new google.maps.LatLng(lat, lng);\n      var geocoder = geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        'latLng': latlng\n      }, function (results, status) {\n        if (status == google.maps.GeocoderStatus.OK) {\n          if (results[1]) {\n            $('#wp-travel-lat').val(lat);\n            $('#wp-travel-lng').val(lng);\n            $('#wp-travel-location').val(results[1].formatted_address);\n            $('#search-input').val(results[1].formatted_address);\n          }\n        }\n      });\n      map.addMarker({\n        lat: lat,\n        lng: lng,\n        title: place.formatted_address,\n        draggable: true,\n        dragend: function dragend(e) {\n          var lat = e.latLng.lat();\n          var lng = e.latLng.lng();\n          map.setCenter(lat, lng);\n          var latlng = new google.maps.LatLng(lat, lng);\n          var geocoder = geocoder = new google.maps.Geocoder();\n          geocoder.geocode({\n            'latLng': latlng\n          }, function (results, status) {\n            if (status == google.maps.GeocoderStatus.OK) {\n              if (results[1]) {\n                $('#wp-travel-lat').val(lat);\n                $('#wp-travel-lng').val(lng);\n                $('#wp-travel-location').val(results[1].formatted_address);\n                $('#search-input').val(results[1].formatted_address);\n              }\n            }\n          });\n        }\n      });\n    });\n  }\n  /*\n   * Tab js.\n   */\n\n\n  if ($.fn.tabs) {\n    $('.wp-travel-tabs-wrap').tabs({\n      activate: function activate(event, ui) {\n        $(ui.newPanel).css({\n          display: 'inline-block'\n        });\n        $('#wp-travel-settings-current-tab').val($(ui.newPanel).attr('id'));\n\n        if ('undefined' != typeof GMaps && $('#gmap').length > 0) {\n          map.refresh();\n          google.maps.event.trigger(map.map, \"resize\"); // map.setCenter(wp_travel_drag_drop_uploader.lat, wp_travel_drag_drop_uploader.lng);\n        } // wp_travel_backend_map_holder();\n\n      },\n      create: function create(event, ui) {\n        $(ui.panel).css({\n          display: 'inline-block'\n        });\n        $('#wp-travel-settings-current-tab').val($(ui.panel).attr('id'));\n      },\n      load: function load(event, ui) {}\n    });\n  }\n\n  function dateTimePicker() {\n    if ($.fn.wpt_datepicker) {\n      $('#wp-travel-start-date').wpt_datepicker({\n        language: 'en',\n        minDate: new Date(),\n        onSelect: function onSelect(dateStr) {\n          newMinDate = null;\n          newMaxDate = new Date();\n\n          if ('' !== dateStr) {\n            // milliseconds = moment( dateStr, wp_travel_drag_drop_uploader.moment_date_format ).format( 'MM/DD/YYYY' );\n            milliseconds = moment(dateStr, 'YYYY-MM-DD');\n            new_date_min = new Date(milliseconds);\n            newMinDate = new Date(new_date_min.setDate(new Date(new_date_min.getDate())));\n          }\n\n          $('#wp-travel-end-date').wpt_datepicker({\n            minDate: newMinDate\n          });\n        }\n      });\n      $('#wp-travel-end-date').wpt_datepicker({\n        language: 'en',\n        minDate: new Date()\n      });\n      $('.wp-travel-datepicker').wpt_datepicker({\n        language: 'en',\n        minDate: new Date()\n      });\n      $('.wp-travel-timepicker').wpt_datepicker({\n        language: 'en',\n        timepicker: true,\n        onlyTimepicker: true\n      });\n    }\n  }\n\n  dateTimePicker();\n  $(document).on('click', '#publish', function () {\n    var start_date = $('#wp-travel-start-date').val();\n    var end_date = $('#wp-travel-end-date').val();\n    var error = '';\n\n    if ('' != start_date || '' != end_date) {\n      if ('' == start_date) {\n        error += 'Start date can\\'t be empty!' + \"\\n\";\n      } // if ('' == end_date) {\n      //     error += 'End date can\\'t be empty!' + \"\\n\";\n      // }\n      // if ('' != start_date && '' != end_date) {\n      //     start_date = new Date(start_date);\n      //     end_date = new Date(end_date);\n      //     if (end_date <= start_date) {\n      //         error += 'End date must greater than start date.' + \"\\n\";\n      //     }\n      // }\n\n    }\n\n    if ('' == error) {\n      $(document).off('click', '#publish');\n    } else {\n      alert(error);\n      return false;\n    }\n  });\n\n  var createAllErrors = function createAllErrors() {\n    var form = $(this); // errorList = $( \"ul.errorMessages\", form );\n\n    var showAllErrorMessages = function showAllErrorMessages() {\n      //errorList.empty();\n      // Find all invalid fields within the form.\n      var invalidFields = form.find(\":invalid\").each(function (index, node) {\n        // Find the field's corresponding label\n        var label = $(\"label[for=\" + node.id + \"] \"),\n            // Opera incorrectly does not fill the validationMessage property.\n        message = node.validationMessage || 'Invalid value.'; //errorList\n        //  .removeClass( 'hidden' )\n\n        alert('Error in \"' + label.html() + '\": ' + message);\n        var cur_tab = $(this).closest('.wp-travel-tab-content');\n        var tab_nav = cur_tab.attr('id');\n        cur_tab.siblings().addClass('hidden');\n        cur_tab.removeClass('hidden');\n        $(\"a[href = #\" + tab_nav + \"]\").trigger('click');\n      });\n    }; // Support Safari\n\n\n    form.on(\"submit\", function (event) {\n      if (this.checkValidity && !this.checkValidity()) {\n        $(this).find(\":invalid\").first().focus();\n        event.preventDefault();\n      }\n    });\n    $(\"#publish\", form).on(\"click\", showAllErrorMessages);\n    $(\"input\", form).on(\"keypress\", function (event) {\n      var type = $(this).attr(\"type\");\n\n      if (/date|email|month|number|search|tel|text|time|url|week/.test(type) && event.keyCode == 13) {\n        showAllErrorMessages();\n      }\n    });\n  }; // $(\"form\").each(createAllErrors);\n\n\n  $(document).on('click', '#wp-travel-enable-sale', function () {\n    show_sale_price_field();\n  }); // Slugify the text string.\n\n  function wp_travel_filter_string(text) {\n    return text.toString().toLowerCase().replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(/\\,+/g, '-') // Replace comma with -\n    .replace(/\\\"+/g, '-') // Replace \" with -\n    .replace(/\\'+/g, '-') // Replace ' with -\n    .replace(/\\/+/g, '-') // Replace / with -\n    .replace(/\\(+/g, '-') // Replace / with -\n    .replace(/\\)+/g, '-') // Replace / with -\n    // .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars  // issue in other language if uncomment.\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n  } // @since   1.7.6\n  // Pricing Option [single-price || multiple-price]\n\n\n  $(document).on('change', '#wp-travel-pricing-option-type', function () {\n    show_price_option_row(); // show / hide fixed departure fields.\n\n    show_fixed_departured_date_row();\n    show_minimum_payout_row();\n  });\n  /**\n   * @since 1.8.9\n   */\n\n  function show_price_option_row() {\n    var price_option_type = $('#wp-travel-pricing-option-type').val();\n    var show_fields = '.' + price_option_type + '-option-row';\n    $('.price-option-row').addClass('hidden');\n    $(show_fields).removeClass('hidden');\n    show_sale_price_field();\n    show_custom_payout_field();\n  } // @since 1.7.6\n\n\n  function show_fixed_departured_date_row() {\n    var price_option_type = $('#wp-travel-pricing-option-type').val();\n    var fixed_departure = $('#wp-travel-fixed-departure'); // Default fixed departure field show /hide\n\n    if ('multiple-price' === price_option_type || 'single-price' === price_option_type) {\n      if (fixed_departure.is(':checked')) {\n        $('.wp-travel-fixed-departure-row').removeClass('hidden');\n        $('.wp-travel-trip-duration-row').addClass('hidden');\n      } else {\n        $('.wp-travel-fixed-departure-row').addClass('hidden');\n        $('.wp-travel-trip-duration-row').removeClass('hidden');\n      }\n    } // Display Enable Multiple Date if Pricing option set to Multiple Price.\n\n\n    $(\".wp-travel-enable-multiple-dates\").addClass('hidden');\n\n    if ('multiple-price' === price_option_type) {\n      // Fixed Departure field override.\n      if (fixed_departure.is(':checked')) {\n        // Show Multiple Dates fields.\n        $(\".wp-travel-enable-multiple-dates, #wp-variations-multiple-dates\").removeClass('hidden'); // Enable Multiple Dates override.\n\n        show_multiple_dates_fields();\n      } else {\n        // Hide Multiple Dates fields.\n        $(\".wp-travel-enable-multiple-dates, #wp-variations-multiple-dates\").addClass('hidden');\n      }\n    }\n  } // @since 1.7.6\n\n\n  function show_multiple_dates_fields() {\n    var price_option_type = $('#wp-travel-pricing-option-type').val();\n    var enable_fixed_departure = $('#wp-travel-fixed-departure');\n    var enable_multiple_fixed_departure = $('#wp-travel-enable-multiple-fixed-departure');\n\n    if ('multiple-price' === price_option_type && enable_fixed_departure.is(':checked') && enable_multiple_fixed_departure.is(':checked')) {\n      $('.wp-travel-fixed-departure-row').addClass('hidden');\n      $('#wp-variations-multiple-dates').removeClass('hidden');\n    } else {\n      $('.wp-travel-fixed-departure-row').removeClass('hidden');\n      $('#wp-variations-multiple-dates').addClass('hidden');\n    }\n  }\n\n  function show_sale_price_field() {\n    var price_option_type = $('#wp-travel-pricing-option-type').val();\n\n    if ('single-price' == price_option_type && $('#wp-travel-enable-sale').is(':checked')) {\n      //\n      $('#wp-travel-sale-price').removeAttr('disabled').closest('.price-option-row').removeClass('hidden');\n      $('#wp-travel-price').attr('required', 'required');\n      $('#wp-travel-sale-price').attr('required', 'required');\n    } else {\n      $('#wp-travel-sale-price').attr('disabled', 'disabled').closest('.price-option-row').addClass('hidden');\n      $('#wp-travel-price').removeAttr('required');\n      $('#wp-travel-sale-price').removeAttr('required');\n    }\n  }\n\n  function show_custom_payout_field() {\n    if ($('#wp-travel-minimum-partial-payout-percent-use-global').is(':checked')) {\n      $('#wp-travel-minimum-partial-payout-percent').closest('.price-option-row').addClass('hidden');\n    } else {\n      $('#wp-travel-minimum-partial-payout-percent').closest('.price-option-row').removeClass('hidden');\n    }\n  }\n\n  function show_sale_price_field() {\n    var price_option_type = $('#wp-travel-pricing-option-type').val();\n\n    if ('single-price' == price_option_type && $('#wp-travel-enable-sale').is(':checked')) {\n      $('#wp-travel-sale-price').removeAttr('disabled').closest('.price-option-row').removeClass('hidden');\n      $('#wp-travel-price').attr('required', 'required');\n      $('#wp-travel-sale-price').attr('required', 'required');\n    } else {\n      $('#wp-travel-sale-price').attr('disabled', 'disabled').closest('.price-option-row').addClass('hidden');\n      $('#wp-travel-price').removeAttr('required');\n      $('#wp-travel-sale-price').removeAttr('required');\n    }\n  }\n\n  function show_minimum_payout_row() {\n    $('.custom-payout-option-row').each(function () {\n      if ($(this).hasClass('global-enabled')) {\n        $(this).removeClass('hidden');\n      } else {\n        $(this).addClass('hidden');\n      }\n    });\n  } // Fixed Departure [ On || Off ]  @since 1.7.6\n\n\n  $(document).on('click', '#wp-travel-fixed-departure', function () {\n    show_fixed_departured_date_row();\n  }); // Enable Multiple Dates Field @since 1.7.6\n\n  $(document).on('change', '#wp-travel-enable-multiple-fixed-departure', function () {\n    show_multiple_dates_fields();\n  });\n  show_price_option_row(); // single | multiple price fields\n\n  show_fixed_departured_date_row();\n  show_minimum_payout_row(); // show_multiple_dates_fields();\n\n  $(document).on('click', '.wp-travel-clone-post', function (e) {\n    e.preventDefault();\n    var post_id = $(this).data('post_id');\n    var security = $(this).data('security');\n    var data = {\n      post_id: post_id,\n      security: security,\n      action: 'wp_travel_clone_trip'\n    };\n    $.ajax({\n      url: ajaxurl,\n      data: data,\n      type: \"post\",\n      dataType: \"json\",\n      success: function success(data) {\n        location.href = location.href; // location.reload();\n      }\n    });\n  }); //Pricing Key slugify.\n\n  $(document).on('change', '.wp-travel-variation-pricing-name', function () {\n    var price_key = wp_travel_filter_string($(this).val());\n    $(this).siblings('.wp-travel-variation-pricing-uniquekey').val(price_key);\n  }); // Pricing options change function. removed @since 3.0.0\n  // $(document).on('change', '.wp-travel-pricing-options-list', function() {\n  //     if ($(this).val() === 'custom') {\n  //         $(this).parents('.price-option-row').next('.custom-pricing-label-wrap').css('display', 'block');\n  //     } else {\n  //         $(this).parents('.price-option-row').next('.custom-pricing-label-wrap').css('display', 'none');\n  //     }\n  // });\n  // Pricing options change function.\n  // Added since v3.0.0\n\n  $(document).on('change', '.wp-travel-pricing-options-list', function () {\n    var category_id = $(this).data('category-id');\n\n    if ($(this).val() === 'custom') {\n      $('.custom-pricing-label-wrap-' + category_id).css('display', 'block');\n    } else {\n      $('.custom-pricing-label-wrap-' + category_id).css('display', 'none');\n    }\n  });\n  $('.wp-travel-pricing-options-list').trigger('change'); //Pricing options Enable Sale.\n\n  $(document).on('change', '.wp-travel-enable-variation-price-sale', function () {\n    var siblings = $(this).closest('.repeat-row').next('.repeat-row');\n\n    if ($(this).is(':checked')) {\n      siblings.removeClass('hidden');\n      siblings.find('input[type=\"number\"]').attr('required', 'required');\n    } else {\n      siblings.addClass('hidden');\n      siblings.find('input[type=\"number\"]').removeAttr('required');\n    }\n  });\n\n  if ($('.wp-travel-enable-variation-price-sale').is(':checked')) {\n    $(this).closest('.repeat-row').next('.repeat-row').removeClass('hidden');\n  } else {\n    $(this).closest('.repeat-row').next('.repeat-row').addClass('hidden');\n  } // New Pricing options Enable Sale.\n\n\n  $(document).on('change', '.wp-travel-enable-variation-price-sale-new', function () {\n    var siblings = $(this).closest('.repeat-row').next('.repeat-row');\n\n    if ($(this).is(':checked')) {\n      siblings.removeClass('visibility-hidden');\n      siblings.find('input[type=\"number\"]').attr('required', 'required');\n    } else {\n      siblings.addClass('visibility-hidden');\n      siblings.find('input[type=\"number\"]').removeAttr('required');\n    }\n  });\n\n  if ($('.wp-travel-enable-variation-price-sale-new').is(':checked')) {\n    $(this).closest('.repeat-row').next('.repeat-row').removeClass('visibility-hidden');\n  } else {\n    $(this).closest('.repeat-row').next('.repeat-row').addClass('visibility-hidden');\n  }\n\n  if ($('#wp-travel-enable-sale').is(':checked')) {\n    $('#wp-travel-price').attr('required', 'required');\n    $('#wp-travel-sale-price').attr('required', 'required');\n  }\n\n  $(document).on(\"click\", \".wp-travel-featured-post\", function (e) {\n    e.preventDefault();\n    var featuredIcon = $(this);\n    var post_id = $(this).attr(\"data-post-id\");\n    var nonce = $(this).attr(\"data-nonce\");\n    var data = {\n      action: \"wp_travel_featured_post\",\n      post_id: post_id,\n      nonce: nonce\n    };\n    $.ajax({\n      url: ajaxurl,\n      data: data,\n      type: \"post\",\n      dataType: \"json\",\n      success: function success(data) {\n        if (data != 'invalid') {\n          featuredIcon.removeClass(\"dashicons-star-filled\").removeClass(\"dashicons-star-empty\");\n\n          if (data.new_status == \"yes\") {\n            featuredIcon.addClass(\"dashicons-star-filled\");\n          } else {\n            featuredIcon.addClass(\"dashicons-star-empty\");\n          }\n        }\n      }\n    });\n  }); // Add itineraries Data Row.\n\n  $('#add_itinerary_row').click(function (e) {\n    e.preventDefault();\n    var template = wp.template('wp-travel-itinerary-items');\n    var rand = Math.floor(Math.random() * (999 - 10 + 1)) + 10;\n    $('.itinerary_block').append(template({\n      random: rand\n    }));\n    $('.itinerary_block .panel:last .wp-travel-datepicker').wpt_datepicker({\n      language: 'en',\n      minDate: new Date()\n    });\n    $('.itinerary_block .panel:last .wp-travel-timepicker').wpt_datepicker({\n      language: 'en',\n      timepicker: true,\n      onlyTimepicker: true\n    });\n    $('.while-empty').addClass('hidden');\n    $('.wp-collapse-open').removeClass('hidden');\n  }); //Remove Itinerary Data Row.\n\n  $(document).on('click', '.remove_itinery', function (e) {\n    e.preventDefault();\n    $(this).closest('.itinerary_wrap').remove();\n    return false;\n  });\n  var textareaID;\n  $('.tab-accordion .wp-travel-sorting-tabs, #tab-accordion .wp-travel-sorting-tabs, #tab-accordion-itineraries #accordion-itinerary-data').sortable({\n    handle: '.wp-travel-sorting-handle' // start: function(event, ui) { // turn TinyMCE off while sorting (if not, it won't work when resorted)\n    //     textareaID = $(ui.item).find('.wp-editor-container textarea').attr('id');\n    //     try { tinyMCE.execCommand('mceRemoveEditor', false, textareaID); } catch (e) {}\n    // },\n    // stop: function(event, ui) { // re-initialize TinyMCE when sort is completed\n    //     try { tinyMCE.execCommand('mceAddEditor', false, textareaID); } catch (e) {}\n    //     $(this).find('.update-warning').removeClass( 'hidden' );\n    // }\n\n  });\n  $('#wp-travel-tab-content-setting .wp-travel-sorting-tabs tbody').sortable({\n    handle: '.wp-travel-sorting-handle'\n  }); // return on clicking space button.\n\n  $.ui.accordion.prototype._originalKeyDown = $.ui.accordion.prototype._keydown;\n\n  $.ui.accordion.prototype._keydown = function (event) {\n    var keyCode = $.ui.keyCode;\n\n    if (event.keyCode == keyCode.SPACE) {\n      return;\n    }\n\n    this._originalKeyDown(event);\n  };\n\n  $('.ui-accordion-header').click(function () {\n    $('.open-all-link').removeClass('hidden');\n    $('.close-all-link').removeClass('hidden');\n  });\n  $(document).on('click', '.wt-accordion-close', function (e) {\n    var acc_id = $(this).closest('.tab-accordion').attr('id');\n\n    if (confirm(\"Are you sure you want to delete?\") == true) {\n      $(this).closest('div.panel-default').remove();\n      var faqs = $('#' + acc_id + ' .panel-default:visible').length; // alert(faqs);\n\n      if (faqs > 0) {\n        $('.while-empty').addClass('hidden').hide();\n        $('.wp-collapse-open').removeClass('hidden').show();\n      } else {\n        $('.wp-collapse-open').addClass('hidden').hide();\n        $('.while-empty').removeClass('hidden').show();\n      }\n    }\n\n    return;\n  });\n  $('.wp-travel-faq-add-new').on('click', function () {\n    var template = wp.template('wp-travel-faq');\n    var faqs = $('#accordion-faq-data panel-default').length;\n    var rand = Math.floor(Math.random() * (999 - 10 + 1)) + 10;\n    $('#accordion-faq-data').append(template({\n      random: rand\n    }));\n    $('.while-empty').addClass('hidden');\n    $('.wp-collapse-open').removeClass('hidden'); // $('#tab-accordion').accordion('destroy').accordion({ active: faqs });\n  }); // Pricing options template.\n\n  $('.wp-travel-pricing-add-new').on('click', function () {\n    var template = wp.template('wp-travel-pricing-options');\n    var rand = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    var category_id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    $('#pricing-options-data').append(template({\n      random: rand,\n      category_id: category_id\n    }));\n  }); // Trips Facts template.\n\n  $('.wp-travel-trip-facts-add-new').on('click', function () {\n    var template = wp.template('wp-travel-trip-facts-options');\n    var rand = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    $('#accordion-fact-data').append(template({\n      random: rand\n    }));\n  }); // Dates options template.\n\n  $('#date-options-data .panel .wp-travel-multiple-start-date').each(function () {\n    var th = $(this);\n    var savedMeanDate = $(this).val();\n    newMinDate = new Date();\n\n    if ('' !== savedMeanDate) {\n      // milliseconds = moment( savedMeanDate, wp_travel_drag_drop_uploader.moment_date_format ).format( 'MM/DD/YYYY' );\n      milliseconds = moment(savedMeanDate, 'YYYY-MM-DD');\n      new_date_min = new Date(milliseconds);\n      newMinDate = new Date(new_date_min.setDate(new Date(new_date_min.getDate())));\n      $(this).siblings('.wp-travel-multiple-end-date').wpt_datepicker({\n        minDate: newMinDate\n      });\n    }\n\n    $(this).wpt_datepicker({\n      language: 'en',\n      minDate: new Date(),\n      onSelect: function onSelect(dateStr) {\n        newMinDate = null;\n        newMaxDate = new Date();\n\n        if ('' !== dateStr) {\n          // milliseconds = moment( dateStr, wp_travel_drag_drop_uploader.moment_date_format ).format( 'MM/DD/YYYY' );\n          milliseconds = moment(dateStr, 'YYYY-MM-DD');\n          new_date_min = new Date(milliseconds);\n          newMinDate = new Date(new_date_min.setDate(new Date(new_date_min.getDate())));\n        }\n\n        th.siblings('.wp-travel-multiple-end-date').wpt_datepicker({\n          minDate: newMinDate\n        });\n      }\n    });\n  });\n  $('.wp-travel-multiple-dates-add-new').on('click', function () {\n    var template = wp.template('wp-travel-multiple-dates');\n    var rand = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    $('#date-options-data').append(template({\n      random: rand\n    }));\n    $('#date-options-data .panel:last .wp-travel-multiple-start-date').wpt_datepicker({\n      language: 'en',\n      minDate: new Date(),\n      onSelect: function onSelect(dateStr) {\n        newMinDate = null;\n        newMaxDate = new Date();\n\n        if ('' !== dateStr) {\n          // milliseconds = moment( dateStr, wp_travel_drag_drop_uploader.moment_date_format ).format( 'MM/DD/YYYY' );\n          milliseconds = moment(dateStr, 'YYYY-MM-DD');\n          new_date_min = new Date(milliseconds);\n          newMinDate = new Date(new_date_min.setDate(new Date(new_date_min.getDate())));\n        }\n\n        $('#date-options-data .panel:last .wp-travel-multiple-end-date').wpt_datepicker({\n          minDate: newMinDate\n        });\n      }\n    });\n  }); //value bind to label.\n\n  $(document).on('change keyup', \"*[bind]\", function (e) {\n    var to_bind = $(this).attr('bind');\n    var value = '' != $(this).val() ? $(this).val() : 'Untitled';\n    $(\"*[bind='\" + to_bind + \"']\").html(value);\n    $(\"*[bind='\" + to_bind + \"']\").val($(this).val());\n  }); //Sale price binding on pricing options.\n\n  $(document).on('change keyup', \"*[bindPrice]\", function (e) {\n    var bound_sale = $(this).attr('bindPrice');\n    var value = '' != $(this).val() ? $(this).val() : 1;\n    $(\"*[bindSale='\" + bound_sale + \"']\").attr('max', value);\n  });\n  $(document).on('keyup change', '.section_title', function () {\n    var title = $(this).val();\n    $(this).siblings('.wp-travel-accordion-title').html(title);\n  }); // Sale Price  max value update on price change\n\n  $(document).on('keyup change', '#wp-travel-price', function () {\n    var priceVal = $(this).val();\n    $('#wp-travel-sale-price').attr('max', priceVal);\n  }); // Sale Price  max value update on price change\n\n  $(document).on('keyup change', '.pricing-opt-min-pax', function () {\n    var priceVal = $(this).val();\n    $(this).siblings('.pricing-opt-max-pax').attr('min', priceVal);\n  });\n\n  if ($('#wp-travel-use-global-tabs').is(':checked')) {\n    $('#wp-travel-tab-content-tabs .wp-travel-sorting-tabs').css({\n      \"opacity\": \"0.3\",\n      \"pointer-events\": \"none\"\n    });\n  } else {\n    $('#wp-travel-tab-content-tabs .wp-travel-sorting-tabs').css({\n      \"opacity\": \"1\",\n      \"pointer-events\": \"auto\"\n    });\n  }\n\n  $('#wp-travel-use-global-tabs').change(function () {\n    if ($(this).is(':checked')) {\n      $('#wp-travel-tab-content-tabs .wp-travel-sorting-tabs').css({\n        \"opacity\": \"0.3\",\n        \"pointer-events\": \"none\"\n      });\n    } else {\n      $('#wp-travel-tab-content-tabs .wp-travel-sorting-tabs').css({\n        \"opacity\": \"1\",\n        \"pointer-events\": \"auto\"\n      });\n    }\n  });\n\n  if ($('#wp-travel-use-global-trip-enquiry').is(':checked')) {\n    $('#wp-travel-enable-trip-enquiry-option-row').addClass('hidden');\n  } else {\n    $('#wp-travel-enable-trip-enquiry-option-row').removeClass('hidden');\n  }\n\n  $('#wp-travel-use-global-trip-enquiry').change(function () {\n    if ($(this).is(':checked')) {\n      $('#wp-travel-enable-trip-enquiry-option-row').addClass('hidden');\n    } else {\n      $('#wp-travel-enable-trip-enquiry-option-row').removeClass('hidden');\n    }\n  }); // WP Travel Standard Paypal Merged. @since 1.2.1\n  // Change max partial payment amount on check / uncheck enable sale.\n\n  $(document).on('click', '#wp-travel-enable-sale', function () {\n    var max_payment = $('#wp-travel-price').val();\n\n    if ($(this).is(':checked')) {\n      max_payment = $('#wp-travel-sale-price').val();\n    } // $('#wp-travel-minimum-partial-payout').attr('max', max_payment);\n\n  }); // Change max partial payment amount on changing sale price.\n\n  $(document).on('change', '#wp-travel-sale-price', function () {\n    var max_payment = $(this).val(); // $('#wp-travel-minimum-partial-payout').attr('max', max_payment);\n  });\n  $(document).on('click', '#wp-travel-minimum-partial-payout-percent-use-global', function () {\n    show_custom_payout_field();\n  }); // Ends WP Travel Standard Paypal Merged. @since 1.2.1\n\n  $('input[type=\"number\"]').on('change', function () {\n    if ($(this).attr('placeholder') == 'Min PAX') {\n      var minPax = $(this).val();\n      $(this).siblings('input[type=\"number').attr('min', minPax);\n    }\n  });\n  jQuery('.select-main .close').addClass('hidden');\n  jQuery(document).on('click', '.select-main .close', function () {\n    $(this).siblings('.wp-travel-active').removeClass('wp-travel-active');\n    $(this).siblings('.carret').removeClass('hidden');\n    $(this).addClass('hidden');\n  });\n  jQuery(document).on('click', '.select-main, .select-main .caret', function (e) {\n    if ($(this).find('ul.wp-travel-active').length == 0) {\n      $(this).children('ul').addClass('wp-travel-active');\n      $(this).children('.close').removeClass('hidden');\n      $(this).children('.carret').addClass('hidden');\n    } else {\n      $(this).children('.carret').removeClass('hidden');\n      $(this).children('.close').addClass('hidden');\n      $(this).children('ul').removeClass('wp-travel-active');\n    }\n  });\n  $(document).on(\"click\", function (event) {\n    var $trigger = $(\".select-main\");\n\n    if ($trigger !== event.target && !$trigger.has(event.target).length) {\n      $(\"ul.wp-travel-active\").removeClass(\"wp-travel-active\");\n      $('.select-main').children('.carret').removeClass('hidden');\n      $('.select-main').children('.close').addClass('hidden');\n    }\n  });\n  jQuery(document).on('change', '.select-main li input.multiselect-value', function ($) {\n    //on change do stuff\n    var total_inputs_length = jQuery(this).closest('.select-main').find('li input.multiselect-value').length;\n    var total_checked_length = jQuery(this).closest('.select-main').find('li input.multiselect-value:checked').length; // alert( total_inputs_length + ' - ' + total_checked_length );\n\n    if (total_checked_length == total_inputs_length) {\n      jQuery(this).closest('.select-main').find('.multiselect-all').prop('checked', true);\n    } else {\n      jQuery(this).closest('.select-main').find('.multiselect-all').prop('checked', false);\n    }\n\n    jQuery(this).closest('li').toggleClass('selected');\n  });\n  jQuery(document).on('change', '.multiselect-all', function ($) {\n    if (!jQuery(this).is(':checked')) {\n      jQuery(this).closest('li').siblings().removeClass('selected').find('input.multiselect-value').prop('checked', false);\n    } else {\n      jQuery(this).closest('li').siblings().addClass('selected').find('input.multiselect-value').prop('checked', true);\n    }\n  });\n\n  var updateTable = function updateTable(event) {\n    var currentID = jQuery(this).attr('id');\n    var countSelected = jQuery(this).closest('.select-main').find('li.selected').length;\n    jQuery(this).closest('.select-main').find('ul').siblings('.selected-item').html(countSelected + ' item selected');\n  };\n\n  jQuery(document).on('input click change', 'input.wp-travel-multi-inner', updateTable); //Facts.\n\n  jQuery(document).on('click', '.fact-deleter', function () {\n    jQuery(this).parent().parent().parent().remove();\n  });\n  var types = {\n    multiple: function multiple(obj, unique) {\n      val = this.val();\n      index = this.data('index');\n      jQuery('.fact-' + index).html((obj.options && Object.entries(obj.options) || []).map(function (option) {\n        return jQuery('<label><input type=\"checkbox\" name=\"wp_travel_trip_facts[' + unique + '][value][]\" value=\"' + option[0] + '\"  >' + option[1] + '</label>');\n      }));\n    },\n    single: function single(obj, unique) {\n      val = this.val();\n      index = this.data('index');\n      jQuery('.fact-' + index).html(jQuery('<select>').attr('name', 'wp_travel_trip_facts[' + unique + '][value]').html((obj.options && Object.entries(obj.options) || []).map(function (option) {\n        return jQuery('<option>').attr('value', option[0]).html(option[1]);\n      })));\n    },\n    text: function text(obj, unique) {\n      val = this.val();\n      index = this.data('index');\n      jQuery('.fact-' + index).html(jQuery('<input type=\"text\">').attr('name', 'wp_travel_trip_facts[' + unique + '][value]'));\n    },\n    default: function _default(obj, unique) {\n      val = this.val();\n      index = this.data('index');\n      jQuery('.fact-id-' + index).attr('name', 'wp_travel_trip_facts[' + unique + '][fact_id]').val(obj.id);\n      jQuery('.icon-' + index).attr('name', 'wp_travel_trip_facts[' + unique + '][icon]').val(obj.icon);\n      jQuery('.type-' + index).attr('name', 'wp_travel_trip_facts[' + unique + '][type]').val(obj.type);\n    }\n  };\n  jQuery(document).on('change', '.fact-type-selecter', function () {\n    var unique = Math.random().toString(36).substr(2, 9);\n    jQuery(this).attr('name', 'wp_travel_trip_facts[' + unique + '][label]');\n    var val = jQuery(this).val();\n    var settings = jQuery('#accordion-fact-data').data('factssettings');\n    var setting = settings.filter(function (setting) {\n      return val == setting['name'] || setting['id'] && val == setting['id'];\n    })[0];\n    var type = settings.filter(function (setting) {\n      return val == setting['type'];\n    })[0];\n\n    if (setting) {\n      types[setting.type].call(jQuery(this), setting, unique);\n      types['default'].call(jQuery(this), setting, unique);\n    } else {}\n  });\n})(jQuery);\n\n//# sourceURL=webpack:///./app/assets/js/wp-travel-back-end.js?");

/***/ }),

/***/ "./app/src/admin/sass/main.scss":
/*!**************************************!*\
  !*** ./app/src/admin/sass/main.scss ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-4!./main.scss */ \"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src/index.js!./node_modules/sass-loader/dist/cjs.js?!./app/src/admin/sass/main.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack:///./app/src/admin/sass/main.scss?");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src/index.js!./node_modules/sass-loader/dist/cjs.js?!./app/src/admin/sass/main.scss":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src!./node_modules/sass-loader/dist/cjs.js??ref--6-4!./app/src/admin/sass/main.scss ***!
  \*********************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./app/src/admin/sass/main.scss?./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src!./node_modules/sass-loader/dist/cjs.js??ref--6-4");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ 3:
/*!**********************************************************************************!*\
  !*** multi ./app/assets/js/wp-travel-back-end.js ./app/src/admin/sass/main.scss ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./app/assets/js/wp-travel-back-end.js */\"./app/assets/js/wp-travel-back-end.js\");\nmodule.exports = __webpack_require__(/*! ./app/src/admin/sass/main.scss */\"./app/src/admin/sass/main.scss\");\n\n\n//# sourceURL=webpack:///multi_./app/assets/js/wp-travel-back-end.js_./app/src/admin/sass/main.scss?");

/***/ })

/******/ });